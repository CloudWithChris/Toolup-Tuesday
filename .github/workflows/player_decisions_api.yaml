name: 'Player Decision API'

on:
  push:
    branches:
      - main
    paths:
      - 'src/SpaceBar.PlayerDecisions/**'
      - '.github/workflows/player_decisions_api.yaml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/SpaceBar.PlayerDecisions/**'  
      - '.github/workflows/player_decisions_api.yaml'  

env:
  IMAGE_NAME: cloudwithchris/toolup-tuesday/spacebar/player-decisions
  MICROSERVICE_LOCATION: src/SpaceBar.PlayerDecisions/
  REGISTRY: ghcr.io
  RESOURCE_GROUP: toolup-tuesday

jobs:

  build_image:
    if: github.event_name  == 'push' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3
        
      - name: 'Build and Push Redirect Container Image'
        working-directory: ${{ env.MICROSERVICE_LOCATION }}
        run: |
          docker build . -t ${{ env.IMAGE_NAME }}:${{ github.sha }}
  deploy_image:
      if: github.event_name  == 'push' && github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      permissions:
        packages: write
      steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v3
        - name: Log in to the Container registry
          uses: docker/login-action@v2.0.0
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v4.0.1
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        - name: Build and push Docker image
          uses: docker/build-push-action@v3.0.0
          with:
            context: ${{ env.MICROSERVICE_LOCATION }}
            push: true
            tags: |
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            labels: ${{ steps.meta.outputs.labels }}
  deploy_container_app:
      runs-on: ubuntu-latest
      needs: deploy_image
      environment: production.azure
      permissions:
        id-token: write
      steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v3
        - uses: 'azure/login@v1'
          name: 'Login to Azure'
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        - uses: 'azure/CLI@v1'
          with:
            azcliversion: 2.38.0
            inlineScript: |
              az deployment group create --template-file './src/SpaceBar.PlayerDecisions/iac/template.bicep' --parameters containerAppImage=${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{ github.sha }} containerRegistryPassword=${{ secrets.GITHUB_TOKEN }} -g ${{env.RESOURCE_GROUP}}


