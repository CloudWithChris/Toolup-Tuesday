name: 'Player Decision API'

on:
  push:
    branches:
      - main
    paths:
      - 'src/SpaceBar.PlayerDecisions/**'
      - '.github/workflows/player_decisions_api.yaml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/SpaceBar.PlayerDecisions/**'  
      - '.github/workflows/player_decisions_api.yaml'  

env:
  IMAGE_NAME: ${{ github.repository }}/spacebar/player-decisions
  MICROSERVICE_LOCATION: src/SpaceBar.PlayerDecisions/
  REGISTRY: ghcr.io

jobs:

  build_image:
    if: github.event_name  == 'push' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3
        
      - name: 'Build and Push Redirect Container Image'
        working-directory: ${{ env.MICROSERVICE_LOCATION }}
        run: |
          docker build . -t ${{ env.IMAGE_NAME }}:${{ github.sha }}
  deploy_image:
      if: github.event_name  == 'push' && github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v3
        - name: Log in to the Container registry
          uses: docker/login-action@v2.0.0
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v4.0.1
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        - name: Build and push Docker image
          uses: docker/build-push-action@v3.0.0
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

        # - name: 'Build and Push Redirect Container Image'
        #   working-directory: ${{ env.MICROSERVICE_LOCATION }}
        #   run: |
        #     docker build . -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        #     docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
